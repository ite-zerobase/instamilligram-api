<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.zerobase.instamilligramapi.domain.posts.PostMapper">
    <insert id="insertPost" parameterType="PostIn" useGeneratedKeys="true" keyColumn="post_id" keyProperty="postId">
        INSERT INTO posts
        (
             created_by,
             caption,
             place
        )
        VALUES (
            #{username},
            #{caption},
            #{place}
        )
        RETURNING post_id
    </insert>

    <insert id="insertPostMedia" parameterType="PostMediaIn">
        INSERT INTO post_media
        (
            post_id,
            media_seq,
            media_url,
            media_type
        )
        VALUES
        (
            #{postId},
            #{mediaSeq},
            #{mediaUrl},
            #{mediaType}
        )

    </insert>

    <select id="selectPost" parameterType="PostIn" resultMap="PostOutMap">
        SELECT
            p.post_id,
            p.created_by,
            u.username,
            u.profile_picture_url,
            EXISTS (SELECT f.followed_at FROM follows f WHERE f.follower = #{requestingUser} and f.followee = u.username) as following,
            p.caption,
            p.created_at,
            p.updated_at,
            p.like_count,
            p.comment_count,
            p.place,
            COALESCE(l.liked_at IS NOT NULL, false) as liked,
            l.liked_at,
            m.media_seq,
            m.media_url,
            m.media_type
        FROM posts p
        JOIN users u ON p.created_by = u.username
        LEFT JOIN post_likes l ON p.post_id = l.post_id and l.username = #{requestingUser}
        LEFT JOIN post_media m ON p.post_id = m.post_id
        WHERE p.post_id = #{postId}
    </select>

    <select id="selectManyPost" parameterType="Paging" resultMap="PostOutMap">
        WITH SelectedPosts AS (
            SELECT
                p.post_id,
                p.created_by,
                u.username,
                u.profile_picture_url,
                null as following,
                p.caption,
                p.created_at,
                p.updated_at,
                p.like_count,
                p.comment_count,
                p.place,
                COALESCE(l.liked_at IS NOT NULL, false) as liked,
                l.liked_at
            FROM posts p
            JOIN users u ON p.created_by = u.username
            LEFT JOIN post_likes l ON p.post_id = l.post_id and l.username = #{requestingUser}
            ORDER BY p.created_at
            OFFSET (#{page}-1)*#{size} FETCH FIRST #{size} ROWS only
        )
        SELECT
            p.*,
            m.media_seq,
            m.media_url,
            m.media_type
        FROM SelectedPosts p
        LEFT JOIN post_media m ON p.post_id = m.post_id
        ORDER BY p.created_at
    </select>

    <resultMap id="PostOutMap" type="PostOut">
        <id property="postId" column="post_id"/>
        <result property="caption" column="caption"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="place" column="place"/>
        <result property="liked" column="liked"/>
        <result property="likedAt" column="liked_at"/>
        <association property="writer" resultMap="PostWriterMap" javaType="UserOut" notNullColumn="username"/>
        <collection property="media" ofType="PostMediaOut" notNullColumn="media_seq"
                    resultMap="PostOutMediaMap"/>
    </resultMap>

    <resultMap id="PostOutMediaMap" type="PostMediaOut">
        <result property="mediaUrl" column="media_url"/>
        <result property="mediaType" column="media_type"/>
    </resultMap>

    <resultMap id="PostWriterMap" type="UserOut">
        <id property="username" column="username"/>
        <result property="profilePictureUrl" column="profile_picture_url"/>
        <result property="following" column="following"/>
    </resultMap>

    <insert id="insertPostLike" parameterType="PostMeta">
        INSERT INTO post_likes
        (
            post_id,
            username
        )
        VALUES
        (
            #{postId},
            #{username}
        )
    </insert>
    <insert id="deletePostLike" parameterType="PostMeta">
        DELETE
        FROM post_likes
        WHERE post_id = #{postId}
        AND username = #{username}
    </insert>

    <update id="updatePostLikeCount" parameterType="PostMeta">
        UPDATE posts
        SET like_count = like_count + #{sign}, updated_at = now()
        WHERE post_id = #{postId}
    </update>
    <update id="updatePostCommentCount" parameterType="PostMeta">
        UPDATE posts
        SET comment_count = comment_count + #{sign}, updated_at = now()
        WHERE post_id = #{postId}
    </update>
    <select id="selectPostLike" parameterType="PostMeta" resultType="PostLike">
        SELECT post_id, username, liked_at
        FROM post_likes
        WHERE post_id = #{postId}
        AND username = #{username}
    </select>

    <select id="selectPostMedia" parameterType="Integer" resultType="PostMediaOut">
        SELECT
            post_id,
            media_seq,
            media_url,
            media_type,
            created_at
        FROM post_media
        WHERE post_id = #{postId}
        ORDER BY media_seq
    </select>
</mapper>